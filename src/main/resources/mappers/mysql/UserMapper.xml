<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gs.bbs.api.user.mapper.UserMapper">

    <select id="getUserList" resultType="com.gs.bbs.api.user.dto.UserDTO" parameterType="com.gs.bbs.api.user.dto.UserDTO">
        SELECT
            GU.USER_NO,
            GU.ROLE_ID,
            GR.NAME AS ROLE_NAME,
            GU.USER_ID,
            GU.KOR_NAME,
            GU.ENG_NAME,
            GU.BIRTHDAY,
            GU.GENDER,
            GU.ADDRESS,
            GU.ADDRESS_DTL,
            GU.PHONENUM,
            GU.EMAIL,
            GU.USE_YN,
            GU.FILE_ID,
            GU.CREATE_USER,
            GU.CREATE_DATE,
            GU.UPDATE_USER,
            GU.UPDATE_DATE
        FROM GS_USER GU
        LEFT OUTER JOIN
            (
                SELECT
                    ROLE_ID,
                    NAME
                FROM    GS_ROLE
                WHERE   USE_YN = 'Y'
            ) GR
        ON GU.ROLE_ID = GR.ROLE_ID
        <where>
            <if test="userNo != 0">
                AND GU.USER_NO = #{userNo}
            </if>
            <if test="@com.gs.bbs.util.StringUtil@isNotEmpty(userId)">
                AND USER_ID = #{userId}
            </if>
            <if test="@com.gs.bbs.util.StringUtil@isNotEmpty(korName)">
                AND KOR_NAME LIKE CONCAT('%', #{korName}, '%')
            </if>
            <if test="roleId != 0">
                AND GR.ROLE_ID = #{roleId}
            </if>
            <if test="@com.gs.bbs.util.StringUtil@isNotEmpty(useYn)">
                AND GU.USE_YN = #{useYn}
            </if>
        </where>
    </select>

    <select id="getUser" parameterType="int" resultType="com.gs.bbs.api.user.dto.UserDTO">
        SELECT
            GU.USER_NO,
            GU.ROLE_ID,
            GR.NAME AS ROLE_NAME,
            GU.USER_ID,
            GU.KOR_NAME,
            GU.ENG_NAME,
            GU.BIRTHDAY,
            GU.GENDER,
            GU.ADDRESS,
            GU.ADDRESS_DTL,
            GU.PHONENUM,
            GU.EMAIL,
            GU.USE_YN,
            GU.FILE_ID,
            GU.CREATE_USER,
            GU.CREATE_DATE,
            GU.UPDATE_USER,
            GU.UPDATE_DATE
        FROM GS_USER GU
        LEFT OUTER JOIN
            (
                SELECT
                ROLE_ID,
                NAME
                FROM    GS_ROLE
                WHERE   USE_YN = 'Y'
            ) GR
        ON GU.ROLE_ID = GR.ROLE_ID
        <where>
            <if test="userNo != 0">
                AND GU.USER_NO = #{userNo}
            </if>
            AND AND GU.USE_YN = 'Y'
        </where>
    </select>

    <select id="getUserPassword" parameterType="String" resultType="String">
        SELECT  PASSWORD
        FROM    GS_USER
        WHERE   USER_ID = #{userId}
        AND     USE_YN = 'Y'
    </select>

    <select id="getUserCount" parameterType="String" resultType="int">
        SELECT  COUNT(*) AS CNT
        FROM    GS_USER
        WHERE   USER_ID = #{userId}
    </select>

    <insert id="insertUser" parameterType="com.gs.bbs.api.user.dto.UserDTO">
        INSERT
        INTO GS_USER
        (
            USER_NO,
            ROLE_ID,
            USER_ID,
            PASSWORD,
            KOR_NAME,
            ENG_NAME,
            BIRTHDAY,
            GENDER,
            ADDRESS,
            ADDRESS_DTL,
            PHONENUM,
            EMAIL,
            USE_YN,
            FILE_ID,
            CREATE_USER,
            CREATE_DATE
        )
        VALUES
        (
            (
                SELECT IFNULL(MAX(USER_NO), 0) + 1
                FROM GS_USER GU
            ),
            #{roleId},
            #{userId},
            #{password},
            #{korName},
            #{engName},
            #{birthday},
            #{gender},
            #{address},
            #{addressDtl},
            #{phoneNum},
            #{email},
            'Y',
            #{fileId},
            #{createUser},
            NOW()
        )
    </insert>

    <update id="updateUser" parameterType="com.gs.bbs.api.user.dto.UserDTO">
        UPDATE  GS_USER
        SET     ROLE_ID = #{roleId},
                KOR_NAME = #{korName},
                ENG_NAME = #{engName},
                BIRTHDAY = #{birthday},
                GENDER = #{gender},
                ADDRESS = #{address},
                ADDRESS_DTL = #{addressDtl},
                PHONENUM = #{phoneNum},
                EMAIL = #{email},
                FILE_ID = #{fileId},
                UPDATE_USER = #{updateUser},
                UPDATE_DATE = NOW()
        WHERE   USER_NO = #{userNo}
    </update>

    <update id="updatePassword" parameterType="com.gs.bbs.api.user.dto.LoginDTO">
        UPDATE  GS_USER
        SET     PASSWORD = #{password}
        WHERE   USER_ID = #{userId}
    </update>

    <delete id="deleteUser" parameterType="int">
        UPDATE  GS_USER
        SET     USE_YN = 'N'
        WHERE   USER_NO IN
        <foreach collection="list" item="userNo" open="(" close=")" separator=",">
            #{userNo}
        </foreach>
    </delete>
</mapper>